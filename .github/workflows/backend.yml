name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: bot-payment

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Image Tag
        run: echo "IMAGE_TAG=prod-latest" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          platforms: linux/amd64

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: root
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          script: |
            echo "Stopping and removing existing container..."
            docker stop mohirpool_backend || true
            docker rm mohirpool_backend || true
            
            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:prod-latest
            
            echo "Running new container..."
            docker run -d \
              --name mohirpool_backend \
              --restart always \
              -p 8000:8000 \
              -v /root/bot-payment/.env:/app/.env \
              ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:prod-latest
            
            echo "Deployment completed successfully!"
